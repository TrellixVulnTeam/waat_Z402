Help on class datetime in module datetime:

class ddaatteettiimmee(date)
 |  datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])
 |  
 |  The year, month and day arguments are required. tzinfo may be None, or an
 |  instance of a tzinfo subclass. The remaining arguments may be ints.
 |  
 |  Method resolution order:
 |      datetime
 |      date
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  ____aadddd____(self, value, /)
 |      Return self+value.
 |  
 |  ____eeqq____(self, value, /)
 |      Return self==value.
 |  
 |  ____ggee____(self, value, /)
 |      Return self>=value.
 |  
 |  ____ggeettaattttrriibbuuttee____(self, name, /)
 |      Return getattr(self, name).
 |  
 |  ____ggtt____(self, value, /)
 |      Return self>value.
 |  
 |  ____hhaasshh____(self, /)
 |      Return hash(self).
 |  
 |  ____llee____(self, value, /)
 |      Return self<=value.
 |  
 |  ____lltt____(self, value, /)
 |      Return self<value.
 |  
 |  ____nnee____(self, value, /)
 |      Return self!=value.
 |  
 |  ____nneeww____(*args, **kwargs) from builtins.type
 |      Create and return a new object.  See help(type) for accurate signature.
 |  
 |  ____rraadddd____(self, value, /)
 |      Return value+self.
 |  
 |  ____rreedduuccee____(...)
 |      __reduce__() -> (cls, state)
 |  
 |  ____rreedduuccee__eexx____(...)
 |      __reduce_ex__(proto) -> (cls, state)
 |  
 |  ____rreepprr____(self, /)
 |      Return repr(self).
 |  
 |  ____rrssuubb____(self, value, /)
 |      Return value-self.
 |  
 |  ____ssttrr____(self, /)
 |      Return str(self).
 |  
 |  ____ssuubb____(self, value, /)
 |      Return self-value.
 |  
 |  aassttiimmeezzoonnee(...)
 |      tz -> convert to local time in new timezone tz
 |  
 |  ccoommbbiinnee(...) from builtins.type
 |      date, time -> datetime with same date and time fields
 |  
 |  ccttiimmee(...)
 |      Return ctime() style string.
 |  
 |  ddaattee(...)
 |      Return date object with same year, month and day.
 |  
 |  ddsstt(...)
 |      Return self.tzinfo.dst(self).
 |  
 |  ffrroommttiimmeessttaammpp(...) from builtins.type
 |      timestamp[, tz] -> tz's local time from POSIX timestamp.
 |  
 |  iissooffoorrmmaatt(...)
 |      [sep] -> string in ISO 8601 format, YYYY-MM-DDT[HH[:MM[:SS[.mmm[uuu]]]]][+HH:MM].
 |      sep is used to separate the year from the time, and defaults to 'T'.
 |      timespec specifies what components of the time to include (allowed values are 'auto', 'hours', 'minutes', 'seconds', 'milliseconds', and 'microseconds').
 |  
 |  nnooww(tz=None) from builtins.type
 |      Returns new datetime object representing current time local to tz.
 |      
 |        tz
 |          Timezone object.
 |      
 |      If no tz is specified, uses local timezone.
 |  
 |  rreeppllaaccee(...)
 |      Return datetime with new specified fields.
 |  
 |  ssttrrppttiimmee(...) from builtins.type
 |      string, format -> new datetime parsed from a string (like time.strptime()).
 |  
 |  ttiimmee(...)
 |      Return time object with same time but with tzinfo=None.
 |  
 |  ttiimmeessttaammpp(...)
 |      Return POSIX timestamp as float.
 |  
 |  ttiimmeettuuppllee(...)
 |      Return time tuple, compatible with time.localtime().
 |  
 |  ttiimmeettzz(...)
 |      Return time object with same time and tzinfo.
 |  
 |  ttzznnaammee(...)
 |      Return self.tzinfo.tzname(self).
 |  
 |  uuttccffrroommttiimmeessttaammpp(...) from builtins.type
 |      Construct a naive UTC datetime from a POSIX timestamp.
 |  
 |  uuttccnnooww(...) from builtins.type
 |      Return a new datetime representing UTC day and time.
 |  
 |  uuttccooffffsseett(...)
 |      Return self.tzinfo.utcoffset(self).
 |  
 |  uuttccttiimmeettuuppllee(...)
 |      Return UTC time tuple, compatible with time.localtime().
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  ffoolldd
 |  
 |  hhoouurr
 |  
 |  mmiiccrroosseeccoonndd
 |  
 |  mmiinnuuttee
 |  
 |  sseeccoonndd
 |  
 |  ttzziinnffoo
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes defined here:
 |  
 |  mmaaxx = datetime.datetime(9999, 12, 31, 23, 59, 59, 999999)
 |  
 |  mmiinn = datetime.datetime(1, 1, 1, 0, 0)
 |  
 |  rreessoolluuttiioonn = datetime.timedelta(0, 0, 1)
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from date:
 |  
 |  ____ffoorrmmaatt____(...)
 |      Formats self with strftime.
 |  
 |  ffrroommoorrddiinnaall(...) from builtins.type
 |      int -> date corresponding to a proleptic Gregorian ordinal.
 |  
 |  iissooccaalleennddaarr(...)
 |      Return a 3-tuple containing ISO year, week number, and weekday.
 |  
 |  iissoowweeeekkddaayy(...)
 |      Return the day of the week represented by the date.
 |      Monday == 1 ... Sunday == 7
 |  
 |  ssttrrffttiimmee(...)
 |      format -> strftime() style string.
 |  
 |  ttooddaayy(...) from builtins.type
 |      Current date or datetime:  same as self.__class__.fromtimestamp(time.time()).
 |  
 |  ttoooorrddiinnaall(...)
 |      Return proleptic Gregorian ordinal.  January 1 of year 1 is day 1.
 |  
 |  wweeeekkddaayy(...)
 |      Return the day of the week represented by the date.
 |      Monday == 0 ... Sunday == 6
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from date:
 |  
 |  ddaayy
 |  
 |  mmoonntthh
 |  
 |  yyeeaarr
